# immich-compose.yml
# Adapted from official Immich docker-compose.yml
# Environment variables are embedded in this file

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release # Use release tag directly
    volumes:
      - immich_upload:/usr/src/app/upload # Use named volume defined below
      - /etc/localtime:/etc/localtime:ro
    environment: # Added environment variables
      - DB_HOSTNAME=database
      - DB_USERNAME=immich
      - DB_PASSWORD=changeme_immich_db_password # --- CHANGE THIS ---
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=redis
      - JWT_SECRET=changeme_immich_jwt_secret # --- CHANGE THIS ---
      - IMMICH_MACHINE_LEARNING_URL=http://immich_machine_learning:3003
      - TZ=Europe/Berlin
    # ports: # Removed, Traefik handles exposure
    #   - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    networks:
      - immich_internal
      - proxy # Added for Traefik
    labels: # Added for Traefik
      traefik.enable: "true"
      traefik.http.routers.immich-secure.entrypoints: "websecure"
      traefik.http.routers.immich-secure.rule: "Host(`photos.blokth.com`)"
      traefik.http.routers.immich-secure.tls: "true"
      traefik.http.routers.immich-secure.service: "immich-service"
      traefik.http.services.immich-service.loadbalancer.server.port: "3001" # Immich server API port (not 2283)
    # healthcheck: # Removed
    #   disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release # Use release tag directly
    volumes:
      - immich_model_cache:/cache # Use renamed volume
    environment: # Added environment variables
      - DB_HOSTNAME=database
      - DB_USERNAME=immich
      - DB_PASSWORD=changeme_immich_db_password # --- CHANGE THIS ---
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=redis
      - IMMICH_MACHINE_LEARNING_URL=http://immich_machine_learning:3003
      - TZ=Europe/Berlin
    restart: always
    networks:
      - immich_internal
    # healthcheck: # Removed
    #   disable: false

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    volumes: # Added explicit volume
      - immich_redis_data:/data
    restart: always
    networks:
      - immich_internal
    # healthcheck: # Removed
    #   test: redis-cli ping || exit 1

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52 # Using official image reference
    environment:
      # Variables from .env
      POSTGRES_USER: immich # Mapped from DB_USERNAME
      POSTGRES_PASSWORD: changeme_immich_db_password # Mapped from DB_PASSWORD --- CHANGE THIS ---
      POSTGRES_DB: immich # Mapped from DB_DATABASE_NAME
      # Explicitly defined in original compose
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - immich_pgdata:/var/lib/postgresql/data # Use renamed volume
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: always
    networks:
      - immich_internal
    # healthcheck: # Removed

volumes:
  immich_upload:
  immich_model_cache:
  immich_redis_data:
  immich_pgdata:

networks:
  immich_internal: # Added internal network
    driver: bridge
  proxy:
    external: true 